{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82108\\\\Desktop\\\\react\\\\21-1-adv-routing-project\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  req,\n  params\n}) {\n  const data = await req.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const res = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!res.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not save events'\n    }), {\n      status: 500\n    });\n  } else {\n    return res;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","req","params","data","formData","eventData","title","get","image","date","description","res","fetch","method","headers","body","JSON","stringify","ok","Response","message","status","$RefreshReg$"],"sources":["C:/Users/82108/Desktop/react/21-1-adv-routing-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from \"../components/EventForm\"\r\n\r\nfunction NewEventPage() {\r\n    return (\r\n        <EventForm />\r\n    )\r\n}\r\n\r\nexport default NewEventPage\r\n\r\nexport async function action({req, params}) {\r\n    const data = await req.formData();\r\n    \r\n    const eventData = {\r\n        title: data.get('title'),\r\n        image: data.get('image'),\r\n        date: data.get('date'),\r\n        description: data.get('description')\r\n    }\r\n\r\n    const res = await fetch('http://localhost:8080/events', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(eventData)\r\n    })\r\n\r\n    if(!res.ok) {\r\n        throw new Response(JSON.stringify({ message: 'Could not save events' }),\r\n        {status: 500}\r\n      )\r\n    } else {\r\n        return res\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,YAAYA,CAAA,EAAG;EACpB,oBACID,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAErB;AAACC,EAAA,GAJQL,YAAY;AAMrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,GAAG;EAAEC;AAAM,CAAC,EAAE;EACxC,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,QAAQ,CAAC,CAAC;EAEjC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACpDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAG,CAACM,GAAG,CAACO,EAAE,EAAE;IACR,MAAM,IAAIC,QAAQ,CAACH,IAAI,CAACC,SAAS,CAAC;MAAEG,OAAO,EAAE;IAAwB,CAAC,CAAC,EACvE;MAACC,MAAM,EAAE;IAAG,CACd,CAAC;EACH,CAAC,MAAM;IACH,OAAOV,GAAG;EACd;AACJ;AAAC,IAAAZ,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}