{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82108\\\\Desktop\\\\react\\\\21-1-adv-routing-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  const event = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events' }\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events' }),\n    //   {status: 500}\n    // )\n    return json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["json","useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","event","events","_c","loader","response","fetch","ok","status","$RefreshReg$"],"sources":["C:/Users/82108/Desktop/react/21-1-adv-routing-project/frontend/src/pages/Events.js"],"sourcesContent":["import { json, useLoaderData } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData()\r\n\r\n  if(data.isError) {\r\n    return <p>{ data.message }</p>\r\n  }\r\n  const event = data.events\r\n  return (\r\n    <>\r\n      <EventsList events={event} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n    // return { isError: true, message: 'Could not fetch events' }\r\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events' }),\r\n    //   {status: 500}\r\n    // )\r\n    return json(\r\n      { message: 'Could not fetch events' }, \r\n      { status: 500 }\r\n    )\r\n  } else {\r\n    return response\r\n  } \r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAE5B,IAAGQ,IAAI,CAACC,OAAO,EAAE;IACf,oBAAON,OAAA;MAAAO,QAAA,EAAKF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EACA,MAAMC,KAAK,GAAGR,IAAI,CAACS,MAAM;EACzB,oBACEd,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,UAAU;MAACgB,MAAM,EAAED;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC7B,CAAC;AAEP;AAACR,EAAA,CAZQD,UAAU;EAAA,QACJN,aAAa;AAAA;AAAAkB,EAAA,GADnBZ,UAAU;AAcnB,eAAeA,UAAU;AAEzB,OAAO,eAAea,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,OAAOvB,IAAI,CACT;MAAEY,OAAO,EAAE;IAAyB,CAAC,EACrC;MAAEY,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOH,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}