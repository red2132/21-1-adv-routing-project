{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82108\\\\Desktop\\\\react\\\\21-1-adv-routing-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, useParams } from 'react-router-dom';\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  req,\n  params\n}) {\n  const id = params.eventId;\n  const res = await fetch('http://localhost:8080/events/' + id);\n  if (!res.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events'\n    }), {\n      status: 500\n    });\n  } else {\n    return res;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","useParams","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","req","params","id","eventId","res","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["C:/Users/82108/Desktop/react/21-1-adv-routing-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import {useLoaderData, useParams} from 'react-router-dom'\r\nimport EventItem from \"../components/EventItem\"\r\n\r\nfunction EventDetailPage() {\r\n    const data = useLoaderData()\r\n\r\n    return (\r\n        <EventItem event={data.event}/>\r\n    )\r\n}\r\n\r\nexport default EventDetailPage\r\n\r\nexport async function loader({req, params}) {\r\n    const id = params.eventId\r\n    const res = await fetch('http://localhost:8080/events/'+id)\r\n\r\n    if(!res.ok) {\r\n        throw new Response(JSON.stringify({ message: 'Could not fetch events' }),\r\n        {status: 500}\r\n      )\r\n    } else {\r\n        return res\r\n    }\r\n}\r\n"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,SAAS,QAAO,kBAAkB;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAE5B,oBACII,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEvC;AAACN,EAAA,CANQD,eAAe;EAAA,QACPL,aAAa;AAAA;AAAAa,EAAA,GADrBR,eAAe;AAQxB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAAC;EAACC,GAAG;EAAEC;AAAM,CAAC,EAAE;EACxC,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAACH,EAAE,CAAC;EAE3D,IAAG,CAACE,GAAG,CAACE,EAAE,EAAE;IACR,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAyB,CAAC,CAAC,EACxE;MAACC,MAAM,EAAE;IAAG,CACd,CAAC;EACH,CAAC,MAAM;IACH,OAAOP,GAAG;EACd;AACJ;AAAC,IAAAN,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}